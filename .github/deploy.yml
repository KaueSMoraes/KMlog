name: Deploy Stage

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '9.0.x'

      - name: Restore workloads
        run: dotnet workload restore

      - name: Build Solution
        run: dotnet build --configuration Release

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: ./CI/Back/Dockerfile
          push: true
          tags: |
            kauemoraes/kmlogger-app:api-stage
          build-args: |
            AWS_KEY_ID=${{ secrets.AWS_KEY_ID }}
            AWS_KEY_SECRET=${{ secrets.AWS_KEY_SECRET }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            DURATION_URL_TEMP_IMAGES=${{ secrets.DURATION_URL_TEMP_IMAGES }}
            DURATION_URL_TEMP_VIDEOS=${{ secrets.DURATION_URL_TEMP_VIDEOS }}
            BUCKET_IMAGES=${{ secrets.BUCKET_IMAGES }}
            BUCKET_VIDEOS=${{ secrets.BUCKET_VIDEOS }}
            ISDEVELOPMENT=${{ secrets.ISDEVELOPMENT }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            BACKEND_URL=${{ secrets.BACKEND_URL }}
            HOST_DATABASE=${{ secrets.HOST_DATABASE }}
            USERNAME_DATABASE=${{ secrets.USERNAME_DATABASE }}
            DATABASE=${{ secrets.DATABASE }}
            PASSWORD_DATABASE=${{ secrets.PASSWORD_DATABASE }}
            PORT_DATABASE=${{ secrets.PORT_DATABASE }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_SERVER=${{ secrets.SMTP_SERVER }}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
            JWT_KEY=${{ secrets.JWT_KEY }}
            API_KEY=${{ secrets.API_KEY }}
   
            

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            # Realiza login no Docker Hub
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Remove imagens antigas na VPS
            docker rmi -f kauemoraes/kmlogger-app:api-main || true

            # Faz pull das novas imagens
            docker pull kauemoraes/kmlogger-app:api-main

            # Para e remove containers antigos
            docker ps -q --filter "name=kmlogger-app-api" | xargs -r docker stop
            docker ps -aq --filter "name=kmlogger-app-api" | xargs -r docker rm -f

            # Sobe os novos containers
            docker run -d --restart unless-stopped --name kmlogger-app-api -p 5070:5070 kauemoraes/kmlogger-app:api-main

            # Verifica os containers rodando
            docker ps -a
